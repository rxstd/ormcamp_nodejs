####
 ##웹프로그래밍 = HTML 웹페이지 내용을 조작하는 것… (HTML태그를 추가, 삭제, 변경),CSS 변경하는 작업..
  - Backend Web Programming : html 조작을 서버에서, 벡엔드 기술(node.js view ejs로) 조작 
  - Frontend Web Programming: html조작을 웹브라우저에서, 프론트엔드기술(순수자바스크립트 = 바닐라.js Jquery)
  - 각종 현대적인 F/E Framework(React,Angular,Next.js,Svelte..)로 조작 


 ##HTML 웹 페이지? 서버에서 보내주는 HTML,CSS Client javaScript가 모두 포함된 웹페이지

 ##Client JavaScript 라이브러리 참조방법 
  - 방법1) 직접 해당 라이브러리 파일을 다운로드 받아서 해당 프로젝트 폴더에 넣어두고 직접 참조하는 방법.
  - 방법2) CDN(Content Delivery Network)을 이용해서 해당 라이브러리를 참조하는 방법. 강의/수업 중 테스트용도 또는 인터넷이 보장된 환경에서 최신/특정버전의 라이브러리가 필요한경우에 사용.

 ## Client 자바스크립트는 .js vs ~.min.js 파일의 차이점
  - .js : 개발용, 가독성이 좋음, 용량이 큼
  - .min.js : 배포용, 가독성이 떨어짐, 용량이 작음


#### Design Pattern = 설계 패턴 
 ## MVC 설계패턴 - 서버에서 사용하는 사용자 요청(웹페이지,데이터)와 응답 처리 패턴 
  - 서버 환경에서 작동되는 각종 웹 어플리케이션 개발 패턴(JAVA,PYTHON,NODE, ETC…)

#### Client-Frontend 기반 UI SW(Application) = web.MobileApp.Windows 설치형, Mac설치형, 설계 패턴 
 ## 1. MVP 패턴 - 옛날 5~10년전 에는 모두 MVP패턴을 사용하였다. 
  - Model: 데이터 소스(프론트엔드에서의 데이터소스 - 벡엔드로 전달할 또는 가져온 데이터 소스)
  - View: 화면 UI요소: 웹브라우저에 렌더링된 list.html, create.html, modify.html 
  - presenter: VIEW요소에서 데이터를 추출해서 Model 소스에 바인딩하거나 
  - 서버에서 가져온 데이터소스를 View 요소에 데이터 바인딩하는 역할(일일이 수동으로 한땀한땀…)

 ## 2. MVVM 패턴 = 요즘은 100% MVVM UI 패턴을 사용해 개발하고 있습니다. (모바일앱, 설치형, etc…)